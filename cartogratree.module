<?php

/**
 * @file
 * Custom functionality for the CartograTree application.
 */

define("CARTOGRATREE_COMPATIBLE_MAJOR_VERSION", '4');

/**
 * Implements hook_libraries_info().
 * Define OpenLayers3 as external library.
 */
function cartogratree_libraries_info() {
    // Expected to be extracted into 'sites/all/libraries/openlayers'.
    $libraries = array();
    $libraries['openlayers'] = array(
      'name' => 'OpenLayers3',
      'vendor url' => 'http://openlayers.org',
      'download url' => 'https://openlayers.org/en/v4.1.1',
      'version' => '4.1.1',
      'version arguments' => array(
        // file where version can be found
        'file' => 'ol.js',
        // Version: v4.1.1
        'pattern' => '/Version: v([0-9\.]+)/',
        'lines' => 5,
      ),
      'files' => array(
        'js' => array(
          // https://openlayers.org/en/v4.1.1/build/ol.js
          'ol.js',
        ),
        'css' => array(
          // https://openlayers.org/en/v4.1.1/css/ol.css
          'ol.css',
        ),
      ),
    );
    return $libraries;
}

/**
 * Implements hook_menu().
 * Register paths in order to define how URL requests are handled.
 */
function cartogratree_menu() {
    $items = array();

    // User interface
    $items['cartogratree/app'] = array(
      'description' => 'Main UI of CartograTree.',
      'page callback' => 'cartogratree_app_page',
      'page arguments' => array(),
      'access arguments' => array('access content'),
    );

    // ADMINISTRATION.
    // List servers and layers.
    $items['admin/cartogratree/settings'] = array(
      'title' => 'CartograTree Settings',
      'description' => 'Provides a form so users can manage GIS server settings, and layers.',
      'page callback' => 'cartogratree_admin_list',
      'page arguments' => array(),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
    );

    // -- Add servers.
    $items['admin/cartogratree/settings/servers/add'] = array(
      'title' => 'Add CartograTree Servers',
      'description' => 'Provide servers used by the CartograTree application.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('cartogratree_admin_settings_servers_form', 'add'),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
    );

    // -- Edit servers.
    $items['admin/cartogratree/settings/servers/edit'] = array(
      'title' => 'Update CartograTree Servers',
      'description' => 'Update servers used by the CartograTree application.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('cartogratree_admin_settings_servers_form', 'edit'),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
    );

    // -- Add layer.
    $items['admin/cartogratree/settings/layer/add'] = array(
      'title' => 'Add CartograTree Layer',
      'description' => 'Make a layer available to the CartograTree application.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('cartogratree_admin_settings_layer_form', 'add'),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
    );

    // -- Edit layer.
    $items['admin/cartogratree/settings/layer/edit'] = array(
      'title' => 'Edit CartograTree Layer',
      'description' => 'Edit an existing CartograTree Layer.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('cartogratree_admin_settings_layer_form', 'edit'),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
    );

    // -- Delete layer.
    $items['admin/cartogratree/settings/layer/delete'] = array(
      'title' => 'Delete CartograTree Layer',
      'description' => 'Delete an existing CartograTree Layer.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('cartogratree_admin_settings_layer_form', 'delete'),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
    );

    // Management of layers' access.
    // -- Add permissions
    $items['admin/cartogratree/settings/layer/access'] = array(
      'title' => 'Layer Permissions',
      'description' => 'Handle permissions for a layer.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('cartogratree_admin_layer_permissions_form', 5),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
    );

    // -- Remove (no confirm)
    $items['admin/cartogratree/settings/layer/access/%/%/%'] = array(
      'title' => 'Remove Layer Permissions',
      'description' => 'Handle permissions for a layer.',
      'page callback' => 'cartogratree_admin_layer_permission_remove_callback',
      'page arguments' => array(5, 6, 7),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
    );

    return $items;
}

/**
 * The user interface for CartograTree
 */
function cartogratree_app_page() {
    $options = '';
    $layers = cartogratree_get_layers();
    foreach ($layers as $l) {
        $options .= '<option value="' . $l->name . '" label="' . $l->title . '">' . $l->url . '</option>' . PHP_EOL;
    }

    // keep track of up to four layers selected to be shown
    $content = "<input type=\"hidden\" id=\"cartogratree_shown_layers\">";
    // pop-up window shown when the user tries to select more than four layers to show
    $content .= "<div id=\"cartogratree_popup\">
      <span>Only four layers can be shown!<br/>Unselect another shown layer and try again.</span><br/>
      <button id=\"cartogratree_popup_close\">OK</button>
    </div>";
    // pop-up window shown when the user clicks on one of the four maps
    $content .= "<div id=\"cartogratree_ol_popup\" class=\"cartogratree_ol_popup\">
      <a href=\"#\" id=\"cartogratree_ol_popup_closer\" class=\"cartogratree_ol_popup_closer\"></a>
      <div id=\"cartogratree_ol_popup_content\"></div>
    </div>";
    // side navigation panel: menu button, unordered list with the steps, and drop-down lists with layers
    $content .= "<span class=\"cartogratree_navbtn\">&#9776;</span>
    <div id=\"cartogratree_sidenav\" class=\"cartogratree_sidenav\">
      <ul id=\"cartogratree_sidenav_ul\">
        <li class=\"cartogratree_sidenav_li\">1. Select environmental layers
          <span id=\"cartogratree_layers_arrow\" class=\"cartogratree_arrow\">&#9660;</span>
          <div id=\"cartogratree_layers_select\" style=\"display:none;\">
            <b>Select up to 4 layers to show:</b><br/>
            <select id=\"cartogratree_layers_show_select\" class=\"cartogratree_select\" multiple>
                " . $options . "
            </select>
            <b>Select other layers to use:</b><br/>
            <select id=\"cartogratree_layers_use_select\" class=\"cartogratree_select\" multiple>
                " . $options . "
            </select>
          </div>
        </li>
        <li class=\"cartogratree_sidenav_li\">2. Filter data
          <span id=\"cartogratree_filter_arrow\" class=\"cartogratree_arrow\">&#9660;</span>
          <div id=\"cartogratree_filter\" style=\"display:none;\">
            <b>Species:</b><br/>
            <select id=\"cartogratree_trees_select\" class=\"cartogratree_select\" multiple>
                <option selected=\"yes\">Abies alba</option>
                <option selected=\"yes\">Cedrus deodara</option>
                <option selected=\"yes\">Fagus grandifolia</option>
            </select>
          </div>
        </li>
        <li class=\"cartogratree_sidenav_li\">3. List filtered data</li>
      </ul>
    </div>";
    // four maps
    $content .= "<div id=\"cartogratree_squares\">
    <div class=\"cartogratree_row\">
      <div class=\"cartogratree_left\" id=\"cartogratree_top_left\"></div>
      <div class=\"cartogratree_right\" id=\"cartogratree_top_right\"></div>
    </div>
    <div class=\"cartogratree_row\">
      <div class=\"cartogratree_left\" id=\"cartogratree_bottom_left\"></div>
      <div class=\"cartogratree_right\" id=\"cartogratree_bottom_right\"></div>
    </div></div>";

    libraries_load('openlayers');
    drupal_add_js(drupal_get_path('module', 'cartogratree') . '/cartogratree.js');
    drupal_add_css(drupal_get_path('module', 'cartogratree') . '/cartogratree.css');
    $settings = array(
      'cartogratree' => array(
        'gis' => variable_get('cartogratree_gis'),
        'api' => variable_get('cartogratree_api'),
      ),
    );
    drupal_add_js($settings, 'setting');

    return array(
      '#type' => 'markup',
      '#markup' => $content,
    );
}

/**
 * Retrieve all layers the current user has permission to see.
 *
 * @return
 *   A prepared statement object, already executed.
 */
function cartogratree_get_layers() {
  global $user;
  // Grab the roles and user id of the current user.
  $uid = $user->uid;
  $rids = is_array($user->roles) ? array_keys($user->roles) : array();
  // Only grab layers that the current user has permission to see.
  $layers = db_query('
    SELECT l.layer_id, l.title, l.name, l.url
    FROM {cartogratree_layer_permissions} p
    JOIN {cartogratree_layers} l ON l.layer_id=p.layer_id
    WHERE p.uid=:uid OR p.rid IN (:rids)',
    array(':uid' => $uid, ':rids' => $rids));
  return $layers;
}

/**
 * Implements hook_theme().
 * Specify how to render the arrays for both permissions tables on
 * ?q=admin/cartogratree/settings/layer/access/<layer id> as HTML.
 */
function cartogratree_theme($existing, $type, $theme, $path) {
  $items = array();

  $items['cartogratree_admin_form_permission_table'] = array(
    'function' => 'cartogratree_admin_form_permission_table',
    'render element' => 'element',
    'file' => 'includes/cartogratree.admin.inc',
  );

  return $items;
}
