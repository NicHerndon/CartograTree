<?php

/**
 * @file
 * Custom functionality for the CartograTree application.
 */
define("CARTOGRATREE_COMPATIBLE_MAJOR_VERSION", '4');

/**
 * Implements hook_libraries_info().
 * Define OpenLayers3 as external library.
 */
function cartogratree_libraries_info() {
    // Expected to be extracted into 'sites/all/libraries/openlayers'.
    $libraries = array();
    $libraries['openlayers'] = array(
      'name' => 'OpenLayers3',
      'vendor url' => 'http://openlayers.org',
      'download url' => 'https://openlayers.org/en/v4.1.1',
      'version' => '4.1.1',
      'version arguments' => array(
        // file where version can be found
        'file' => 'ol.js',
        // Version: v4.1.1
        'pattern' => '/Version: v([0-9\.]+)/',
        'lines' => 5,
      ),
      'files' => array(
        'js' => array(
          // https://openlayers.org/en/v4.1.1/build/ol.js
          'ol.js',
        ),
        'css' => array(
          // https://openlayers.org/en/v4.1.1/css/ol.css
          'ol.css',
        ),
      ),
    );
    return $libraries;
}

/**
 * Implements hook_menu().
 * Register paths in order to define how URL requests are handled.
 */
function cartogratree_menu() {
    $items = array();

    // User interface
    $items['cartogratree'] = array(
      'description' => 'Main UI of CartograTree.',
      'title' => 'CartograTree',
      'access arguments' => array('use cartogratree'),
    );

    // ADMINISTRATION.
    // List servers and layers.
    $items['admin/cartogratree/settings'] = array(
      'title' => 'CartograTree',
      'description' => 'Provides a form so users can manage GIS server settings, and layers.',
      'page callback' => 'cartogratree_admin_list',
      'page arguments' => array(),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
    );

    // ==============================================================================================================
    // -- Add servers.
    $items['admin/cartogratree/settings/servers/add'] = array(
      'title' => 'Add CartograTree Servers',
      'description' => 'Provide servers used by the CartograTree application.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('cartogratree_admin_settings_servers_form', 'add'),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
      'type' => MENU_CALLBACK,
    );

    // -- Edit servers.
    $items['admin/cartogratree/settings/servers/edit'] = array(
      'title' => 'Update CartograTree Servers',
      'description' => 'Update servers used by the CartograTree application.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('cartogratree_admin_settings_servers_form', 'edit'),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
    );

    // ==============================================================================================================
    // -- Add group.
    $items['admin/cartogratree/settings/group/add'] = array(
      'title' => 'Add CartograTree groups for layers',
      'description' => 'Make a group available to the CartograTree application.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('cartogratree_admin_settings_group_form', 'add'),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
    );

    // -- Edit group.
    $items['admin/cartogratree/settings/group/edit'] = array(
      'title' => 'Edit CartograTree group',
      'description' => 'Edit an existing CartograTree group.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('cartogratree_admin_settings_group_form', 'edit'),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
    );

    // -- Delete group.
    $items['admin/cartogratree/settings/group/delete'] = array(
      'title' => 'Delete CartograTree group',
      'description' => 'Delete an existing CartograTree group.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('cartogratree_admin_settings_group_form', 'delete'),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
    );

    // -- Add subgroups
    $items['admin/cartogratree/settings/group/%/subgroups'] = array(
      'title' => 'Group management',
      'description' => 'Add or remove sublayers to a group.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('cartogratree_admin_group_management_form', 4),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
    );

    // -- Remove subgroup (no confirm)
    $items['admin/cartogratree/settings/group/%/remove-subgroup/%'] = array(
      'title' => 'Remove subgroup from group',
      'description' => 'Handle subgroup membership for a group.',
      'page callback' => 'cartogratree_admin_group_remove_subgroup',
      'page arguments' => array(4, 6),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
    );

    // ==============================================================================================================
    // -- Add subgroup.
    $items['admin/cartogratree/settings/subgroup/add'] = array(
      'title' => 'Add CartograTree subgroup for layers',
      'description' => 'Make a subgroup available to the CartograTree application.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('cartogratree_admin_settings_subgroup_form', 'add'),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
    );

    // -- Edit subgroup.
    $items['admin/cartogratree/settings/subgroup/edit'] = array(
      'title' => 'Edit CartograTree subgroup',
      'description' => 'Edit an existing CartograTree subgroup.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('cartogratree_admin_settings_subgroup_form', 'edit'),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
    );

    // -- Delete subgroup.
    $items['admin/cartogratree/settings/subgroup/delete'] = array(
      'title' => 'Delete CartograTree subgroup',
      'description' => 'Delete an existing CartograTree subgroup.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('cartogratree_admin_settings_subgroup_form', 'delete'),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
    );

    // ==============================================================================================================
    // -- Add layer.
    $items['admin/cartogratree/settings/layer/add'] = array(
      'title' => 'Add CartograTree layer',
      'description' => 'Make a layer available to the CartograTree application.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('cartogratree_admin_settings_layer_form', 'add'),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
    );

    // -- Edit layer.
    $items['admin/cartogratree/settings/layer/edit'] = array(
      'title' => 'Edit CartograTree layer',
      'description' => 'Edit an existing CartograTree layer.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('cartogratree_admin_settings_layer_form', 'edit'),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
    );

    // -- Delete layer.
    $items['admin/cartogratree/settings/layer/delete'] = array(
      'title' => 'Delete CartograTree layer',
      'description' => 'Delete an existing CartograTree layer.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('cartogratree_admin_settings_layer_form', 'delete'),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
    );

    // ==============================================================================================================
    // Management of layers' access.
    // -- Add permissions
    $items['admin/cartogratree/settings/layer/access'] = array(
      'title' => 'Layer Permissions',
      'description' => 'Handle permissions for a layer.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('cartogratree_admin_layer_permissions_form', 5),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
    );

    // -- Remove (no confirm)
    $items['admin/cartogratree/settings/layer/access/%/%/%'] = array(
      'title' => 'Remove Layer Permissions',
      'description' => 'Handle permissions for a layer.',
      'page callback' => 'cartogratree_admin_layer_permission_remove_callback',
      'page arguments' => array(5, 6, 7),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
    );

    // ==============================================================================================================
    // -- Add field.
    $items['admin/cartogratree/settings/layer/%/field/add'] = array(
      'title' => 'Add CartograTree field',
      'description' => 'Make a field available to the CartograTree application.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('cartogratree_admin_settings_field_form', 4, 'add'),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
    );

    // -- Edit field.
    $items['admin/cartogratree/settings/layer/%/field/edit'] = array(
      'title' => 'Edit CartograTree field',
      'description' => 'Edit an existing CartograTree field.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('cartogratree_admin_settings_field_form', 4, 'edit'),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
    );

    // -- Delete field.
    $items['admin/cartogratree/settings/layer/%/field/delete'] = array(
      'title' => 'Delete CartograTree field',
      'description' => 'Delete an existing CartograTree field.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('cartogratree_admin_settings_field_form', 4, 'delete'),
      'access arguments' => array('administer cartogratree'),
      'file' => 'includes/cartogratree.admin.inc',
    );

    return $items;
}

/**
 * Implements hook_theme().
 * Specify how to render the arrays for both permissions tables on
 * ?q=admin/cartogratree/settings/layer/access/<layer id> as HTML;
 * and sub/group management tables on
 * ?q=admin/cartogratree/settings/group/subgroups/<group id>, and
 * ?q=admin/cartogratree/settings/subgroups/group/<subgroup id>
 * as well as the CartograTree app page ?q=cartogratree.
 */
function cartogratree_theme($existing, $type, $theme, $path) {
    $items = array();

    $items['cartogratree_admin_form_permission_table'] = array(
      'function' => 'cartogratree_admin_form_permission_table',
      'render element' => 'element',
      'file' => 'includes/cartogratree.admin.inc',
    );
    $items['cartogratree_admin_form_group_mgmt_table'] = array(
      'function' => 'cartogratree_admin_form_group_mgmt_table',
      'render element' => 'element',
      'file' => 'includes/cartogratree.admin.inc',
    );
    $items['page__cartogratree'] = array(
      'path' => $path . "/theme",
      'template' => 'templates/page--cartogratree',
      'render element' => 'page',
//      'file' => 'cartogratree_theme.inc',   // this works only ONCE after clearing the cache
    );

    return $items;
}

/*
 * Implements template_preprocess_page().
 */
function cartogratree_preprocess_page(&$variables) {
    if (current_path() == 'cartogratree') {
        global $user;
        // Grab the roles and user id of the current user.
        $uid = $user->uid;
        $rids = is_array($user->roles) ? array_keys($user->roles) : array();
        // Only grab layers that the current user has permission to see.
        $records = db_query('
            SELECT l.layer_id, l.title, l.name, l.url, g.group_name, s.subgroup_name, g.group_rank, gs.subgroup_rank, l.layer_rank
            FROM {cartogratree_layer_permissions} p
            JOIN {cartogratree_layers} l ON l.layer_id=p.layer_id
            JOIN {cartogratree_groups} g ON g.group_id = l.group_id
            JOIN {cartogratree_subgroups} s ON s.subgroup_id = l.subgroup_id
            JOIN {cartogratree_groups_subgroups} gs ON g.group_id = gs.group_id AND s.subgroup_id = gs.subgroup_id
            WHERE p.uid=:uid OR p.rid IN (:rids)
            ORDER BY g.group_rank, gs.subgroup_rank, l.layer_rank', array(':uid' => $uid, ':rids' => $rids));
        $groups = array(); $layers = array(); $layer_ids = array();
        foreach ($records as $record) {
            $groups[$record->group_rank]['group_name'] = $record->group_name;
            $groups[$record->group_rank]['group_rank'] = $record->group_rank;
            if ($record->subgroup_name != '[No subgroup]') {
                $groups[$record->group_rank]['has_subgroups'] = TRUE;
            }
            else {
                $groups[$record->group_rank]['has_subgroups'] = FALSE;
            }
            $groups[$record->group_rank]['subgroups'][$record->subgroup_rank]['subgroup_name'] = $record->subgroup_name;
            $groups[$record->group_rank]['subgroups'][$record->subgroup_rank]['layers'][$record->layer_id]['layer_id'] = $record->layer_id;
            $groups[$record->group_rank]['subgroups'][$record->subgroup_rank]['layers'][$record->layer_id]['layer_title'] = $record->title;
            $groups[$record->group_rank]['subgroups'][$record->subgroup_rank]['layers'][$record->layer_id]['layer_name'] = $record->name;
            $groups[$record->group_rank]['subgroups'][$record->subgroup_rank]['layers'][$record->layer_id]['layer_url'] = $record->url;
//        $groups[$record->group_rank]['subgroups'][$record->subgroup_rank]['layers'][$record->layer_id]['layer_rank'] = $record->layer_rank;
            array_push($layers, array('id' => "cartogratree_sidenav_layer_" . $record->layer_id, 'name' => $record->name, 'title' => $record->title, 'url' => $record->url,));
            array_push($layer_ids, $record->layer_id);
        }
        $variables['cartogratree_layers'] = $groups;

        $fields = array();
        $records = db_query('
            SELECT f.*, l.title, l.name
            FROM {cartogratree_fields} f
            JOIN {cartogratree_layers} l ON l.layer_id=f.layer_id
            WHERE f.layer_id in (:ids)', array(':ids' => $layer_ids));
        foreach ($records as $record) {
            //$fields['Machine name for the layer']['Field name returned by layer'] = $record->name;
            $fields[$record->name]['Human-readable name for the layer'] = $record->title;
            $fields[$record->name]['Layer ID'] = $record->layer_id;

            $fields[$record->name][$record->field_name]['Field ID'] = $record->field_id;
            $fields[$record->name][$record->field_name]['Field name shown to user'] = $record->display_name;
            $fields[$record->name][$record->field_name]['Filter data by this field'] = $record->filter;
            $fields[$record->name][$record->field_name]['Type of filter'] = $record->filter_type;
            $fields[$record->name][$record->field_name]['Values'] = $record->field_values;
            $fields[$record->name][$record->field_name]['Precision used with range values'] = $record->precision;
            $fields[$record->name][$record->field_name]['Value returned by layer that should be masked'] = $record->mask_value;
            $fields[$record->name][$record->field_name]['Text shown to user for masked values'] = $record->mask_display;
            $fields[$record->name][$record->field_name]['Show this field in maps pop-up'] = $record->pop_up;
            $fields[$record->name][$record->field_name]['Show this field in data table'] = $record->data_table;
        }
        
        libraries_load('openlayers');
        foreach (['dialog', 'tabs', 'accordion', 'button', 'slider'] as $ui) {
            drupal_add_library('system', 'ui.' . $ui);
        }
        drupal_add_js(drupal_get_path('module', 'cartogratree') . '/cartogratree.js');
        drupal_add_css(drupal_get_path('module', 'cartogratree') . '/cartogratree.css');

        $settings = array(
          'cartogratree' => array(
            'gis' => variable_get('cartogratree_gis'),
            'api' => variable_get('cartogratree_api'),
          ),
          'layers_for_sidenav' => $layers,
          'fields' => $fields,
        );
        drupal_add_js($settings, 'setting');
    }
}

/*
 * Implements hook_permission().
 */
function cartogratree_permission() {
    return array(
      'administer cartogratree' => array(
        'title' => t('Administer CartograTree'),
        'description' => t('Perform administration tasks for CartograTree.'),
      ),
      'use cartogratree' => array(
        'title' => t('Use CartograTree'),
        'description' => t('Use the CartograTree application.'),
      ),
    );
}
